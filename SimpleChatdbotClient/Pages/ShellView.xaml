<Window x:Name="window" x:Class="SimpleChatdbotClient.Pages.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        xmlns:local="clr-namespace:SimpleChatdbotClient.Pages"
        xmlns:local1="clr-namespace:SimpleChatdbotClient"
        d:DataContext="{d:DesignInstance local:ShellViewModel,IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        Title="聊天机器人演示程序" Height="800" Width="600" Background="{DynamicResource background_brush}"
        xmlns:s="https://github.com/canton7/Stylet">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SimpleChatdbotClient;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="background">#F5F5F5</Color>
            <SolidColorBrush x:Key="background_brush" Color="{StaticResource background}" options:Freeze="True" />
            <Color x:Key="icon_btn_normal">#F7F7F7</Color>
            <SolidColorBrush x:Key="icon_btn_normal_brush" Color="{StaticResource icon_btn_normal}" options:Freeze="True" />
            <Color x:Key="message_send_bg">#98E165</Color>
            <SolidColorBrush x:Key="message_send_bg_brush" Color="{StaticResource message_send_bg}" options:Freeze="True" />
            <Color x:Key="message_recv_bg">#F6F6F6</Color>
            <SolidColorBrush x:Key="message_recv_bg_brush" Color="{StaticResource message_recv_bg}" options:Freeze="True" />

            <Color x:Key="green_normal">#07C160</Color>
            <SolidColorBrush x:Key="green_normal_brush" Color="{StaticResource green_normal}" options:Freeze="True" />

            <local1:ChatBubbleSelector x:Key="chatBubbleSelector"/>

            <DataTemplate x:Key="chatRecv1">
                <Grid Margin="0,5,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border CornerRadius="2" Width="35" Height="35" BorderBrush="Blue" BorderThickness="0" VerticalAlignment="Top" Margin="0,3,0,0">
                        <Border.Background>
                            <ImageBrush ImageSource="/SimpleChatdbotClient;component/chatbotIcon.jpg" />
                        </Border.Background>
                    </Border>

                    <Border x:Name="border1" Grid.Column="1" CornerRadius="1" BorderBrush="#EDEDED" BorderThickness="1" VerticalAlignment="Top" Margin="10,2,0,2" Background="#FFFFFF" HorizontalAlignment="Left" Padding="5" MinHeight="35" MinWidth="50">
                        <Label VerticalContentAlignment="Center">
                            <TextBlock TextWrapping="Wrap" Text="{Binding Message}" />
                        </Label>
                    </Border>
                    <Canvas Grid.Column="1" Width="10" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,14,0,0" Background="Transparent">
                        <Path x:Name="path1" Stroke="#EDEDED" StrokeThickness="1" Fill="#FFFFFF">
                            <Path.Data>
                                <PathGeometry Figures="M 8,0 L 0,6,8,12"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="path1" Property="Fill" Value="{DynamicResource message_recv_bg_brush}" />
                        <Setter TargetName="border1" Property="Background" Value="{DynamicResource message_recv_bg_brush}" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="chatSend1">
                <Grid Margin="0,5,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="1" CornerRadius="2" Width="35" Height="35" BorderBrush="Blue" BorderThickness="0" VerticalAlignment="Top" Margin="0,3,0,0">
                        <Border.Background>
                            <ImageBrush ImageSource="/SimpleChatdbotClient;component/userIcon.jpg" />
                        </Border.Background>
                    </Border>

                    <Border x:Name="border1" CornerRadius="1" BorderBrush="#9EEA6A" BorderThickness="1" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,2,10,2" Background="#9EEA6A" Padding="5" MinHeight="35" MinWidth="50">
                        <Label VerticalContentAlignment="Center">
                            <TextBlock TextWrapping="Wrap" Text="{Binding Message}" />
                        </Label>
                    </Border>
                    <Canvas Width="10" Height="16" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,14,0,0" Background="Transparent">
                        <Path x:Name="path1" Stroke="#9EEA6A" StrokeThickness="0.5" Fill="#9EEA6A">
                            <Path.Data>
                                <PathGeometry Figures="M 0,12 L 0,0,8,6"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="path1" Property="Fill" Value="{DynamicResource message_send_bg_brush}" />
                        <Setter TargetName="border1" Property="Background" Value="{DynamicResource message_send_bg_brush}" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style TargetType="{x:Type ListBoxItem}" x:Key="listViewItemStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>

            <Style TargetType="Button" x:Key="IconButtonStyle">
                <Setter Property="Background" Value="{DynamicResource icon_btn_normal_brush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource icon_btn_normal_brush}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}" >
                            <Border x:Name="PART_BUTTON_BORDER" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>

            <Label VerticalContentAlignment="Center">
                <TextBlock VerticalAlignment="Center">
                   <Run FontSize="15">电影聊天助手</Run>
                </TextBlock>
            </Label>

            <Label Grid.Column="1" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">...</Label>
        </Grid>
        <ListBox Grid.Row="1" ItemTemplateSelector="{StaticResource chatBubbleSelector}" ItemsSource="{Binding Messages}" Background="{DynamicResource background_brush}" 
                 SelectedIndex="{Binding SelectedMessage}" BorderThickness="0,1,0,1" BorderBrush="#D3D3D3"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource listViewItemStyle}"></Style>
            </ListBox.ItemContainerStyle>
            <!-- 绑定自定义行为 -->
            <i:Interaction.Behaviors>
                <local1:AutoScrollBehavior />
            </i:Interaction.Behaviors>
        </ListBox>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Style="{StaticResource IconButtonStyle}" Width="35">
                <TextBlock Style="{StaticResource IconFont}" VerticalAlignment="Center">&#xe65b;</TextBlock>
            </Button>

            <TextBox Grid.Column="1" x:Name="textBox" Margin="5,10,5,10" TextWrapping="Wrap" Text="{Binding Message,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" 
                     CaretBrush="Green" BorderBrush="{DynamicResource background_brush}" BorderThickness="0" FontSize="15" Padding="5" MinHeight="50" MaxHeight="150" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" AcceptsReturn="True">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="2"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button Grid.Column="2" Style="{StaticResource IconButtonStyle}" Width="35">
                <TextBlock Style="{StaticResource IconFont}" VerticalAlignment="Center">&#xe625;</TextBlock>
            </Button>
            <Button x:Name="btnSend" Content="发送" Command="{s:Action SendMessage}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Grid.Column="3" Margin="0,0,0,0" VerticalAlignment="Center" Width="60" Height="30">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{DynamicResource green_normal_brush}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource green_normal_brush}" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}" >
                                    <Border x:Name="PART_BUTTON_BORDER" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0.5" CornerRadius="3" Background="{TemplateBinding Background}">
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Green"/>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray"/>
                                <Setter Property="Cursor" Value="No" />
                                <Setter Property="BorderBrush" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</Window>
